

Canvas: is a way to use open GL in yer browser.
    Canvas is it's own window and shouldn't be bigger than your browser window. Should (basically) be fixed to your page.
        Not so cheap.

https://www.html5rocks.com/en/tutorials/canvas/performance/
https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas
https://webplatform.github.io/docs/concepts/programming/drawing_images_onto_canvas/
    Offscreen - there is an offscreen canvas API, OR you can just draw one with a different context and hide it
        Seo: drawImage (the hiding method) will work better. (You can draw a canvas without adding it to the DOM.).
        Offscreen would be a bit cleaner code because then you're not having to deal with those two render methods.
    NEXT STEP: figure out how to get your canvas to draw to another canvas, and render only part

https://stackoverflow.com/questions/21064101/understanding-offsetwidth-clientwidth-scrollwidth-and-height-respectively
https://stackoverflow.com/questions/30379924/understanding-offsetwidth-and-clientwidth-when-css-border-box-is-activ


? Playhead - use an overlay canvas? seems way cheaper than re-rendering offscreen!


REVIEW:
    shouldComponentUpdate (piano)
        skip the note add re-render because the state change to offscreen dirty catches it
        is there a use for piano onscreenDirty?
    no current use for re-rendering offscreen for reference or time rolls
        will be later, like with changing cents, colors, time numbers, etc.
    scroll change not directly controlled (props change triggers re-render)
    if initial gemBoxWidth/Height set from onscreenCanvas dimensions on window resize
        ... won't that mess up the zoom?
        you could track zoom settings as you deviate from original then apply those
        might be complicated with the offset.
        or you could just forget it...
    remove window listener for handleResize
        document listener vs window listener
    forceUpdate

TODO NEXT 2/17
    rename 'canvasHeight/Width' redux to 'pianoCanvasWidth/Height'
    Box Display:
        width & height of gembox at initial zoom should be that of the onscreen canvas
            that way it won't be distorted
                it seems more distorted.
                yeah something is wrong here...
                    ? this.canvas.width  = this.canvas.offsetWidth;
                    canvas dimensions assigned on mount, so also may not be properly re-assigned
                forceUpdate?
                    hmmm but doesn't do other canvases
                    you could track an increment on redux like windowResizeCount: 0
            https://www.pluralsight.com/guides/re-render-react-component-on-window-resize
        you might want getDerivedStateFromProps
            because we're changing state based on something there



        ? why is piano update called twice for a note click?
            betcha it's: once for note props changing, another due to setoffscreenDirty props
            yeah that seems to be it. how to handle it tho.
                "Every dispatched action in Redux is sent to all reducers. This means a single action can be handled in different ways by different reducers."
                ok so will *that* trigger multiple re-renders? or does redux ship it all simultaneously?
            might be relevant: https://developmentarc.gitbooks.io/react-indepth/content/life_cycle/update/postrender_with_componentdidupdate.html
        note that onscreenDirty is never set false
        how to manage on reference and time rolls?
            seems like each need their own dirty/clean state
                currently neither will ever actually need offscreen re-render
            does this really need to be managed on redux?
    window.onresize
    set gemBox dimensions to onscreen dimensions on mount/resize
    ask Seo:
        where should all the logic go?
            ("can you extract the mouseDrag logic to a helper or something?")
            access store in actions/reducers for compares?
        check buffers in render?
        wait where to I put that offscreenDirty true?
    playhead!


https://medium.com/@ktruong008/absolute-imports-with-create-react-app-4338fbca7e3d



    octavePx to go?
        removed from use, leaving old code on App for reference

    LINES PianoRoll var
        note you can add a prevCents (as well as nextCents) to help calc click placement

    HMMM, use of offsetwidth in componentDidMount
    const { cellwidth, cellCountX } = this.state
      // aren't those on redux now?


color: "#aaa"
name: "C"
cents: 0
pitch: 65.4075
nextCents: 75
totalCents: 0
totalCentsNext: 75
index: 0
max: 11

CANVAS RENDER QUESTIONS

    Seo:
     - window size or scroll/zoom dirties onScreen
     - window.onResize (or whatever) put that in componentDidMount (of PianoRoll or anything where it needs to know.)
        - (eafaa7: open console and then scroll/resize on Microtonal reference - it clips like 60% to re-size and the right 40% doesn't
    - set flags to true when you make 'em dirty
    Example:
        drawOnScreen() {
            if (this.state.offscreenBufferDirty) {
                drawOffScreen()
                & set it to clean
            }
            if (!this.state.onscreenBufferDirty) { return }
            & then do all the code... drawImage(parms, parms, parms...
        }
        render() {
            this.drawOnScreen()
        }


PLAYBACK
    noteHead
    u need the 'follow' option (scroll playHead vs scroll composition)


Heroku: first link IDs our app to Heroku (the website we go to). Second is the deployment target.
    https://protected-coast-63863.herokuapp.com/ | https://git.heroku.com/protected-coast-63863.git
did: git remote add heroku https://git.heroku.com/protected-coast-63863.git
did: git push heroku master
    that deploys it!
    heroku open (to open it in browser)

error message? do: heroku logs

ALSO did: git remote add origin git@github.com:gntsketches/tone-gems-server.git
     and: git push origin master
     DIDN'T do: git push -u origin master
        should check on how tracking branches interact with multiple remotes first...


Google OAuth: console.developers.google.com

Error: redirect_uri_mismatch
    https://accounts.google.com/o/oauth2/v2/auth?
    response_type=code&
    redirect_uri=http%3A%2F%2Flocalhost%3A5000%2Fauth%2Fgoogle%2Fcallback&
    scope=profile%20email&
    client_id=971037029571-27djn0ip0rpu7tpolq2tv0ctfegvdio0.apps.googleusercontent.com
    (Fix it at: https://console.developers.google.com/apis/credentials/oauthclient/971037029571-27djn0ip0rpu7tpolq2tv0ctfegvdio0.apps.googleusercontent.com?project=971037029571)


Mongo:
    project: Tonegems
    cluster: tone-gems-dev
    my IP: 173.164.148.133
    username: Gregory
    password: yCn8ym6OVYOltjVU
    Connection String Only: mongodb+srv://Gregory:<password>@tone-gems-dev-1oiso.gcp.mongodb.net/test?retryWrites=true&w=majority
